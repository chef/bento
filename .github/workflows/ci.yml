---
on:
  pull_request:

jobs:
  markdownlint:
    uses: Stromweld/github-workflows/.github/workflows/markdownlint.yml@main

  md-links:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@main
      - name: markdown-link-check
        uses: gaurav-nelson/github-action-markdown-link-check@main
        with:
          use-verbose-mode: "yes"

  yamllint:
    uses: Stromweld/github-workflows/.github/workflows/yamllint.yml@main

  jsonlint:
    uses: Stromweld/github-workflows/.github/workflows/jsonlint.yml@main

  packer-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      - name: Run Packer Init
        run: packer init packer
      - name: Run packer validate
        run: packer validate packer

#  enumerate_iso_validation:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@main
#      - name: enumerate_iso_validation
#        env:
#          EXCLUDE: 'amazon-2*,rhel*,sles*,solaris*'
#        shell: pwsh
#        run: "'::set-output name=matrix::{0}' -f $(Get-ChildItem -Path packer_templates -Include *.json -Exclude ${{ env.EXCLUDE }} -Recurse | Foreach-Object {Join-Path -Path $_.Directory.Name -ChildPath $_.Name} | ConvertTo-Json -Compress)"
#        id: enumerate_iso_validation
#    outputs:
#      matrix: ${{ steps.enumerate_iso_validation.outputs.matrix }}
#
#  iso-availability:
#    needs: enumerate_iso_validation
#
#    runs-on: ubuntu-latest
#    name: iso-validate
#
#    strategy:
#      fail-fast: false
#      matrix:
#        template: ${{ fromJson(needs.enumerate_iso_validation.outputs.matrix) }}
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@main
#      - name: iso-availability
#        shell: pwsh
#        run: |
#          $(Get-Content "packer_templates/${{ matrix.template }}" | ConvertFrom-Json ) |
#            Foreach-Object {
#              if($_.variables.iso_url){
#                $_.variables.iso_url
#              }else{
#                '{0}/{1}/{2}' -f $_.variables.mirror,$_.variables.mirror_directory,$_.variables.iso_name
#              }
#            } | Foreach-Object {
#              Invoke-RestMethod -Uri $_ -Method Head -Verbose
#            }
