---
on:
  workflow_call:

permissions:
  contents: read

env:
  PACKER_GITHUB_API_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  # PACKER_LOG: "1"

jobs:
  aarch64:
    runs-on: [self-hosted, ARM64, qemu]
    strategy:
      fail-fast: false
      matrix:
        os:
          - almalinux-9
          - almalinux-10
          - centos-stream-9
          - centos-stream-10
          - debian-12
          - debian-13
          - fedora-41
          - fedora-42
          - freebsd-13
          - freebsd-14
          - opensuse-leap-15
          - opensuse-leap-16
          - oraclelinux-9
          - oraclelinux-10
          - rockylinux-9
          - rockylinux-10
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-25.04
          - ubuntu-25.10
        provider:
          - qemu
    steps:
      - name: Checkout
        uses: actions/checkout@main
#       - name: Install Vagrant QEMU
#         run: |
#           wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
#           echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
#           sudo apt-get update
#           sudo apt-get install -y software-properties-common vagrant qemu-kvm libvirt-daemon-system virtinst libvirt-clients bridge-utils qemu-utils libvirt-dev
#           vagrant plugin install vagrant-libvirt vagrant-qemu
#       - name: Enable KVM
#         run: |
#           echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#           sudo udevadm control --reload-rules
#           sudo udevadm trigger --name-match=kvm
#           sudo usermod -aG kvm $USER
#           sudo usermod -aG libvirt $USER
#           sudo chmod o+rw /var/run/libvirt/libvirt-sock
#           sudo systemctl start libvirtd
#           sudo systemctl status libvirtd
#       - name: Install Chef
#         uses: actionshub/chef-install@3.0.0
#       - name: Setup Packer
#         uses: hashicorp/setup-packer@main
#         with:
#           version: latest
#       - name: Install Bento
#         run: |
#           eval "$(chef shell-init bash)"
#           gem build bento.gemspec
#           gem install bento-*.gem
      - name: Bento build
        run: |
          eval "$(chef shell-init bash)"
          bento build -o ${{ matrix.provider }}.vm os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-aarch64.pkrvars.hcl"
          ls -alh builds/build_complete/
          cat builds/build_complete/${{ matrix.os }}*-aarch64._metadata.json
      - name: Bento Test
        run: |
          eval "$(chef shell-init bash)"
          bento test libvirt
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}-qemu-aarch64"
          path: |
            builds/testing_passed/aarch64/*.box
            builds/testing_passed/aarch64/*.json
          overwrite: true
          retention-days: 10
          compression-level: 0 # no compression
