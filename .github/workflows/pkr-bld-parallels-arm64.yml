---
on:
  workflow_call:

jobs:
  aarch64:
    runs-on: [self-hosted, ARM64, parallels]
    strategy:
      fail-fast: false
      matrix:
        os:
          - almalinux-8
          - almalinux-9
          - centos-7
          - centos-stream-8
          - centos-stream-9
          - debian-10
          - debian-11
          - fedora-37
          - fedora-38
          - oraclelinux-7
          - oraclelinux-8
          - oraclelinux-9
          - rockylinux-8
          - rockylinux-9
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-22.10
        provider:
          - parallels-iso
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: iso-availability
        shell: pwsh
        run: Invoke-RestMethod -Method Head -Verbose -Uri $(Get-Content os_pkrvars/$('${{ matrix.os }}'.split('-')[0])/${{ matrix.os }}-x86_64.pkrvars.hcl | ConvertFrom-StringData).iso_url.Trim('"')
#      - name: Setup Packer
#        if: steps.verify-changed-files.outputs.files_changed == 'true'
#        uses: hashicorp/setup-packer@main
#        with:
#          version: latest
      - name: Packer Init
        env:
          PACKER_GITHUB_API_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: packer init -upgrade packer_templates
      - name: Packer FMT
        run: if packer fmt -check -recursive .; then exit 0; else echo "Some packer files need to be formatted, run 'packer fmt -recursive .' to fix"; exit 1; fi
      - name: Packer Validate
        run: packer validate -var-file=os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-aarch64.pkrvars.hcl" packer_templates
      - name: Packer build
        run: packer build -timestamp-ui -only=${{ matrix.provider }}.vm -var-file=os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-aarch64.pkrvars.hcl" packer_templates
      - name: Remove VM in case of canceled job
        if: cancelled()
        run: |
          VM="$(prlctl list -a | grep ${{ matrix.os }} | cut -d " " -f 1)"
          echo Powering off and deleting any existing VMs named ${{ matrix.os }}*-aarch64
          prlctl stop "$VM" --kill 2> /dev/null
          sleep 1
          prlctl delete "$VM" 2> /dev/null
          sleep 2
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.os }}-parallels-aarch64.box"
          path: |
            builds/*.box
          retention-days: 10
