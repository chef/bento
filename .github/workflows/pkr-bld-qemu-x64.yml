---
on:
  workflow_call:

env:
  PACKER_GITHUB_API_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  PACKER_LOG: "1"

jobs:
  x86_64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - almalinux-8
          - almalinux-9
          - centos-7
          - centos-stream-8
          - centos-stream-9
          - debian-11
          - debian-12
          - fedora-38
          - fedora-39
          - freebsd-13
          - freebsd-14
          - opensuse-leap-15
          - oraclelinux-7
          - oraclelinux-8
          - oraclelinux-9
          - rockylinux-8
          - rockylinux-9
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-23.10
        provider:
          - qemu
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Install Vagrant and kvm
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt-get install -y software-properties-common vagrant qemu-kvm libvirt-daemon-system virtinst libvirt-clients bridge-utils qemu-utils libvirt-dev
          vagrant plugin install vagrant-libvirt vagrant-qemu
          vagrant --version
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo usermod -aG kvm $USER
          sudo usermod -aG libvirt $USER
          sudo chmod o+rw /var/run/libvirt/libvirt-sock
          sudo systemctl start libvirtd
          sudo systemctl status libvirtd
      - name: Install Chef
        uses: actionshub/chef-install@3.0.0
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      - name: Install Bento
        run: |
          eval "$(chef shell-init bash)"
          gem build bento.gemspec
          gem install bento-*.gem
      - name: Bento build
        run: |
          rm -rf builds
          sudo mkdir -p /mnt/builds/iso
          sudo chmod -R 777 /mnt/builds
          sudo ln -s /mnt/builds ./
          eval "$(chef shell-init bash)"
          bento build -o ${{ matrix.provider }}.vm --vars "qemu_accelerator=kvm" os_pkrvars/$(echo ${{ matrix.os }} | cut -d "-" -f 1)/"${{ matrix.os }}-x86_64.pkrvars.hcl"
          ls -alh builds/
          cat builds/${{ matrix.os }}*-x86_64._metadata.json
      - name: Upload build artifact
        uses: actions/upload-artifact@main
        with:
          name: "${{ matrix.os }}-qemu-x86_64"
          path: |
            builds/*.box
            builds/*.json
          retention-days: 10
          compression-level: 0 # no compression
      - name: Bento Test
        run: |
          eval "$(chef shell-init bash)"
          bento test libvirt
