
variable "box_basename" {
  type    = string
  default = "freebsd-12.3-i386"
}

variable "build_directory" {
  type    = string
  default = "../../builds"
}

variable "cpus" {
  type    = string
  default = "2"
}

variable "disk_size" {
  type    = string
  default = "40960"
}

variable "git_revision" {
  type    = string
  default = "__unknown_git_revision__"
}

variable "headless" {
  type    = string
  default = ""
}

variable "http_proxy" {
  type    = string
  default = "${env("http_proxy")}"
}

variable "https_proxy" {
  type    = string
  default = "${env("https_proxy")}"
}

variable "install_path" {
  type    = string
  default = "freebsd-11/installerconfig"
}

variable "iso_checksum" {
  type    = string
  default = "cc90ab819d3fc4782227fc4269ea7de0747c007cfca9df905f9e50c8617fd820"
}

variable "iso_name" {
  type    = string
  default = "FreeBSD-12.3-RELEASE-i386-disc1.iso"
}

variable "memory" {
  type    = string
  default = "1024"
}

variable "mirror" {
  type    = string
  default = "https://download.freebsd.org/ftp"
}

variable "mirror_directory" {
  type    = string
  default = "releases/i386/i386/ISO-IMAGES/12.3"
}

variable "name" {
  type    = string
  default = "freebsd-12.3-i386"
}

variable "no_proxy" {
  type    = string
  default = "${env("no_proxy")}"
}

variable "pkg_branch" {
  type    = string
  default = "quarterly"
}

variable "qemu_display" {
  type    = string
  default = "none"
}

variable "template" {
  type    = string
  default = "freebsd-12.3-i386"
}

variable "version" {
  type    = string
  default = "TIMESTAMP"
}
# The "legacy_isotime" function has been provided for backwards compatability, but we recommend switching to the timestamp and formatdate functions.

locals {
  build_timestamp = "${legacy_isotime("20060102150405")}"
  http_directory  = "${path.root}/http"
}

source "parallels-iso" "autogenerated_1" {
  boot_command         = ["<esc><wait>", "boot -s<wait>", "<enter><wait>", "<wait10><wait10>", "/bin/sh<enter><wait>", "mdmfs -s 100m md1 /tmp<enter><wait>", "mdmfs -s 100m md2 /mnt<enter><wait>", "dhclient -p /tmp/dhclient.em0.pid -l /tmp/dhclient.lease.em0 em0<enter><wait>", "fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.install_path} && bsdinstall script /tmp/installerconfig<enter><wait>"]
  boot_wait            = "8s"
  cpus                 = "${var.cpus}"
  disk_size            = "${var.disk_size}"
  guest_os_type        = "freebsd"
  http_directory       = "${local.http_directory}"
  iso_checksum         = "${var.iso_checksum}"
  iso_url              = "${var.mirror}/${var.mirror_directory}/${var.iso_name}"
  memory               = "${var.memory}"
  output_directory     = "${var.build_directory}/packer-${var.template}-parallels"
  parallels_tools_mode = "disable"
  prlctl               = [["set", "{{ .Name }}", "--device-set", "cdrom0", "--iface", "ide"], ["set", "{{ .Name }}", "--device-del", "fdd0"], ["set", "{{ .Name }}", "--device-del", "parallel0"]]
  prlctl_version_file  = ".prlctl_version"
  shutdown_command     = "echo 'vagrant' | su -m root -c 'shutdown -p now'"
  ssh_password         = "vagrant"
  ssh_port             = 22
  ssh_timeout          = "10000s"
  ssh_username         = "vagrant"
  vm_name              = "${var.template}"
}

source "qemu" "autogenerated_2" {
  boot_command     = ["<esc><wait>", "boot -s<wait>", "<enter><wait>", "<wait10><wait10>", "/bin/sh<enter><wait>", "mdmfs -s 100m md1 /tmp<enter><wait>", "mdmfs -s 100m md2 /mnt<enter><wait>", "dhclient -p /tmp/dhclient.vtnet0.pid -l /tmp/dhclient.lease.vtnet0 vtnet0<enter><wait>", "fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.install_path} && bsdinstall script /tmp/installerconfig<enter><wait>"]
  boot_wait        = "7s"
  cpus             = "${var.cpus}"
  disk_size        = "${var.disk_size}"
  headless         = "${var.headless}"
  http_directory   = "${local.http_directory}"
  iso_checksum     = "${var.iso_checksum}"
  iso_url          = "${var.mirror}/${var.mirror_directory}/${var.iso_name}"
  memory           = "${var.memory}"
  output_directory = "${var.build_directory}/packer-${var.template}-qemu"
  qemuargs         = [["-m", "${var.memory}"], ["-display", "${var.qemu_display}"]]
  shutdown_command = "echo 'vagrant' | su -m root -c 'shutdown -p now'"
  ssh_password     = "vagrant"
  ssh_port         = 22
  ssh_timeout      = "10000s"
  ssh_username     = "vagrant"
  vm_name          = "${var.template}"
}

source "virtualbox-iso" "autogenerated_3" {
  boot_command            = ["<esc><wait>", "boot -s<wait>", "<enter><wait>", "<wait10><wait10>", "/bin/sh<enter><wait>", "mdmfs -s 100m md1 /tmp<enter><wait>", "mdmfs -s 100m md2 /mnt<enter><wait>", "dhclient -p /tmp/dhclient.em0.pid -l /tmp/dhclient.lease.em0 em0<enter><wait>", "fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.install_path} && bsdinstall script /tmp/installerconfig<enter><wait>"]
  boot_wait               = "5s"
  cpus                    = "${var.cpus}"
  disk_size               = "${var.disk_size}"
  guest_additions_mode    = "disable"
  guest_os_type           = "FreeBSD"
  headless                = "${var.headless}"
  http_directory          = "${local.http_directory}"
  iso_checksum            = "${var.iso_checksum}"
  iso_url                 = "${var.mirror}/${var.mirror_directory}/${var.iso_name}"
  memory                  = "${var.memory}"
  output_directory        = "${var.build_directory}/packer-${var.template}-virtualbox"
  shutdown_command        = "echo 'vagrant' | su -m root -c 'shutdown -p now'"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_timeout             = "10000s"
  ssh_username            = "vagrant"
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "${var.template}"
}

source "vmware-iso" "autogenerated_4" {
  boot_command     = ["<esc><wait>", "boot -s<wait>", "<enter><wait>", "<wait10><wait10>", "/bin/sh<enter><wait>", "mdmfs -s 100m md1 /tmp<enter><wait>", "mdmfs -s 100m md2 /mnt<enter><wait>", "dhclient -p /tmp/dhclient.em0.pid -l /tmp/dhclient.lease.em0 em0<enter><wait>", "<wait5>", "fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/${var.install_path} && bsdinstall script /tmp/installerconfig<enter><wait>"]
  boot_wait        = "5s"
  cpus             = "${var.cpus}"
  disk_size        = "${var.disk_size}"
  guest_os_type    = "freebsd"
  headless         = "${var.headless}"
  http_directory   = "${local.http_directory}"
  iso_checksum     = "${var.iso_checksum}"
  iso_url          = "${var.mirror}/${var.mirror_directory}/${var.iso_name}"
  memory           = "${var.memory}"
  output_directory = "${var.build_directory}/packer-${var.template}-vmware"
  shutdown_command = "echo 'vagrant' | su -m root -c 'shutdown -p now'"
  ssh_password     = "vagrant"
  ssh_port         = 22
  ssh_timeout      = "10000s"
  ssh_username     = "vagrant"
  vm_name          = "${var.template}"
  vmx_data = {
    "cpuid.coresPerSocket" = "1"
  }
  vmx_remove_ethernet_interfaces = true
}

build {
  sources = ["source.parallels-iso.autogenerated_1", "source.qemu.autogenerated_2", "source.virtualbox-iso.autogenerated_3", "source.vmware-iso.autogenerated_4"]

  provisioner "shell" {
    environment_vars  = ["HOME_DIR=/home/vagrant", "http_proxy=${var.http_proxy}", "https_proxy=${var.https_proxy}", "no_proxy=${var.no_proxy}", "pkg_branch=${var.pkg_branch}"]
    execute_command   = "echo 'vagrant' | {{ .Vars }} su -m root -c 'sh -eux {{ .Path }}'"
    expect_disconnect = true
    scripts           = ["${path.root}/scripts/update.sh", "${path.root}/scripts/postinstall.sh", "${path.root}/scripts/sudoers.sh", "${path.root}/../_common/vagrant.sh", "${path.root}/scripts/vmtools.sh", "${path.root}/scripts/cleanup.sh", "${path.root}/scripts/minimize.sh"]
  }

  post-processor "vagrant" {
    output               = "${var.build_directory}/${var.box_basename}.<no value>.box"
    vagrantfile_template = "${path.root}/vagrantfile_templates/freebsd.rb"
  }
}
